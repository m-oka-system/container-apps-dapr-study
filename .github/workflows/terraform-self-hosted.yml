name: Provision Infrastructure with Terraform (Self-Hosted Runner)

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - "infra/**"
      - ".github/workflows/terraform-self-hosted.yml"
  pull_request:
    branches:
      - main
    paths:
      - "infra/**"
      - ".github/workflows/terraform-self-hosted.yml"

defaults:
  run:
    shell: bash

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

permissions:
  id-token: write
  contents: read

env:
  NODE_VERSION: ${{ vars.NODE_VERSION || '20.x' }}
  TF_VERSION: ${{ vars.TF_VERSION || '1.13.3' }}
  TF_VAR_environment_name: ${{ vars.AZURE_ENV_NAME }}
  TF_VAR_location: ${{ vars.AZURE_LOCATION || 'japaneast' }}
  TF_VAR_allowed_cidr: ${{ secrets.ALLOWED_CIDR }}
  TF_VAR_custom_domain_name: ${{ secrets.CUSTOM_DOMAIN_NAME }}
  TF_VAR_github_app_private_key: ${{ secrets.APP_PRIVATE_KEY }}
  TF_VAR_github_app_id: ${{ secrets.APP_ID }}
  TF_VAR_github_app_installation_id: ${{ secrets.APP_INSTALLATION_ID }}
  TF_VAR_github_owner: ${{ secrets.OWNER }}
  TF_VAR_github_repo: ${{ secrets.REPO }}

jobs:
  terraform:
    runs-on: self-hosted
    timeout-minutes: 10
    environment:
      name: dev
    defaults:
      run:
        working-directory: ./infra

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure Login
        uses: Azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Format
        run: terraform fmt -check
        working-directory: ./infra

      - name: Terraform Init
        run: terraform init
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_USE_OIDC: true

      - name: Terraform validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color -input=false
        continue-on-error: true
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_USE_OIDC: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_USE_OIDC: true
