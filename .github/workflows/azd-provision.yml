name: Provision Infrastructure with Azd

on:
  workflow_dispatch:
    inputs:
      is_apply:
        description: 'is apply'
        required: true
        default: false
        type: boolean

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment:
      name: dev
    env:
      AZCLI_VERSION: ${{ vars.AZCLI_VERSION || '2.72.0' }}
      TF_VERSION: ${{ vars.TF_VERSION || '1.11.2' }}
      TF_VAR_allowed_cidr: ${{ secrets.ALLOWED_CIDR }}
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_ENV_NAME: ${{ vars.AZURE_ENV_NAME }}
      AZURE_LOCATION: ${{ vars.AZURE_LOCATION || 'japaneast' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure Login
        uses: Azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Install azd
        uses: Azure/setup-azd@v2

      - name: Log in with Azure (Federated Credentials)
        run: |
          azd auth login `
            --client-id "$Env:AZURE_CLIENT_ID" `
            --federated-credential-provider "github" `
            --tenant-id "$Env:AZURE_TENANT_ID"
        shell: pwsh

      - name: Set Remote azd env
        run: azd env select ${{ env.AZURE_ENV_NAME}}

      - name: Get runner's Public IP
        id: runner-ip
        uses: haythem/public-ip@v1.3

      - name: Check if KeyVault exists
        id: check_if_keyvault_exists
        continue-on-error: true
        uses: azure/cli@v2
        with:
          azcliversion: ${{ env.AZCLI_VERSION }}
          inlineScript: |
            az keyvault show --name ${{ secrets.KEY_VAULT_NAME }} --query "name" --output tsv

      - name: Add runner's Public IP to KeyVault Firewall
        if: steps.check_if_keyvault_exists.outcome == 'success'
        uses: azure/cli@v2
        with:
          azcliversion: ${{ env.AZCLI_VERSION }}
          inlineScript: |
            az keyvault network-rule add \
              --name ${{ secrets.KEY_VAULT_NAME }} \
              --ip-address ${{ steps.runner-ip.outputs.ipv4 }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Provision Infrastructure Preview
        run: azd provision --preview
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_USE_OIDC: true

      - name: Provision Infrastructure
        if: ${{ inputs.is_apply }}
        run: azd provision --no-prompt
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          ARM_USE_OIDC: true

      - name: Remove runner's Public IP from KeyVault Firewall
        if: steps.check_if_keyvault_exists.outcome == 'success'
        uses: azure/cli@v2
        with:
          azcliversion: ${{ env.AZCLI_VERSION }}
          inlineScript: |
            az keyvault network-rule remove \
              --name ${{ secrets.KEY_VAULT_NAME }} \
              --ip-address ${{ steps.runner-ip.outputs.ipv4 }}
